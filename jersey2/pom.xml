<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>wu.justin</groupId>
	<artifactId>jersey2</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>jersey2 Maven Webapp</name>
	<url>http://maven.apache.org</url>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<skip.integration.tests>true</skip.integration.tests>
		<!-- by default we disable integration test -->
		<!-- please use this parameter to enable it: mvn clean install -Dskip.integration.tests=false -->
	</properties>

	<profiles>
		<profile>
			<id>hasIntegrationTest</id>
			<activation>
				<property>
					<name>skip.integration.tests</name>
					<value>false</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- add embedded Tomcat for testing -->
					<!-- comes from http://cupofjava.de/blog/2013/02/05/integration-tests-with-maven-and-tomcat/ -->
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<!--<path>/jersey2</path> -->
							<!-- Default value is: /${project.artifactId}. so , usually we don't 
								need to set -->
							<!-- <port>18080</port> -->
							<!-- by default, plugin will use 8080, but you can use a parameter 
								to set it: mvn clean install -Dmaven.tomcat.port=17080 -->

						</configuration>
						<executions>
							<execution>
								<id>start-tomcat</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<fork>true</fork>
								</configuration>
							</execution>
							<execution>
								<id>stop-tomcat</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>shutdown</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>


	</profiles>


	<dependencies>
	
	
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- JERSEY -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>

			<!-- use this if your Servlet API >= 3.0 -->
			<!-- <artifactId>jersey-container-servlet</artifactId> -->

			<!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core" -->

			<artifactId>jersey-container-servlet-core</artifactId>

			<version>2.17</version>
		</dependency>

		<!-- this is required for java json mapping -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<scope>compile</scope>
			<version>2.17</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.2.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>net.sf.jtidy</groupId>
			<artifactId>jtidy</artifactId>
			<version>r938</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
			<groupId>wu.justa</groupId>
			<artifactId>object-tree-creator</artifactId>
			<version>1.0</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.sun</groupId>
			<artifactId>tools</artifactId>
			<scope>system</scope>
			<version>1.0</version>
			<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
		</dependency>
		
        <!-- 
             Freemarker template engine 
             '2.3.26-incubating' is the latest stable release at this time.
             The "incubating" suffix is required by the Apache Software Foundation(ASF) until the project becomes
             a fully accepted (graduated) Apache project. The Freemarker only moved "recently" under the ASF umbrella and is subject to ASF internal processes.
        -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.26-incubating</version>
        </dependency>

	</dependencies>

	<build>
		<finalName>jersey2</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<debug>true</debug>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- exclude integration testing from normal unit test -->
			<!-- comes from http://cupofjava.de/blog/2013/02/05/integration-tests-with-maven-and-tomcat/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.1</version>
				<configuration>
					<excludedGroups>wu.justin.IntegrationTest</excludedGroups>
				</configuration>
			</plugin>


			<!-- run integration testing -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.20</version>

				<configuration>

					<includes>
						<include>**/*.java</include>
						<!-- By default, the failsafe plugin excludes various files. You have 
							to override that. -->
					</includes>
					<skipITs>${skip.integration.tests}</skipITs>
					<groups>wu.justin.IntegrationTest</groups>

				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<packagingExcludes>
						WEB-INF/classes/api23.properties,
					</packagingExcludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<doclet>wu.justin.doclet.MyDoclet</doclet>

					<docletPath>${project.build.directory}/classes</docletPath>

					<encoding>UTF-8</encoding>
					<show>public</show>
					<subpackages>wu.justin.rest2</subpackages>
					<useStandardDocletOptions>false</useStandardDocletOptions>
                	<docletArtifacts>
                		<!--  has to declare doclet dependency if we need it -->
                    	<docletArtifact>
                        	<groupId>javax.ws.rs</groupId>
                        	<artifactId>javax.ws.rs-api</artifactId>
                        	<version>2.0.1</version>
                    	</docletArtifact>
                    	<docletArtifact>
                        	<groupId>javax.servlet</groupId>
                        	<artifactId>servlet-api</artifactId>
                        	<version>2.5</version>
                    	</docletArtifact>

                    	<docletArtifact>
            				<groupId>org.freemarker</groupId>
            				<artifactId>freemarker</artifactId>
            				<version>2.3.26-incubating</version>
                    	</docletArtifact>
                    	
                    	<docletArtifact>
            				<groupId>com.fasterxml.jackson.core</groupId>
            				<artifactId>jackson-databind</artifactId>
            				<version>2.3.2</version>
                    	</docletArtifact>

                    	<docletArtifact>
            				<groupId>wu.justa</groupId>
            				<artifactId>object-tree-creator</artifactId>
            				<version>1.0</version>
                    	</docletArtifact>
                    	
                	</docletArtifacts>
 					
 					<!--  pass some parameter into doclet -->
                	<additionalJOptions>
        				<additionalJOption>-J-Dmaven.tomcat.port=${maven.tomcat.port}</additionalJOption>
        				<additionalJOption>-J-Dintegration.test.result=${basedir}\target\test-output</additionalJOption>
        				<additionalJOption>-J-Drestful.doc.output.path=${basedir}\target\apiDoc.html</additionalJOption>   
        				<additionalJOption>-J-Drestful.api.prefix=/api</additionalJOption>   
        				    				
        				
    				</additionalJOptions>

				</configuration>
				<executions>
					<execution>
						<id>attach-javadoc</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


		</plugins>


	</build>

</project>
