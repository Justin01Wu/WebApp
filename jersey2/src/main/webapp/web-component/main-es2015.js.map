{"version":3,"sources":["../shared/src/lib/TypeMessage.ts","../shared/src/lib/enums.ts","../shared/src/lib/profit-name.pipe.ts","../shared/src/lib/safe-url.pipe.ts","../shared/src/lib/shared.component.ts","../shared/src/lib/shared.module.ts","../shared/src/lib/shared.service.ts","../shared/src/public-api.ts","./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/common/LocalSetting.ts","./src/app/fire/FormControlWithError.ts","./src/app/fire/justa-fire.component.ts","./src/app/fire/justa-fire.component.html","./src/app/fire/validators.ts","./src/app/multi-user-picker/multi-user-picker.component.ts","./src/app/multi-user-picker/multi-user-picker.component.html","./src/app/profit-dropdown/profit-dropdown.component.ts","./src/app/profit-dropdown/profit-dropdown.component.html","./src/app/validator/ValidTypeList.ts","./src/app/validator/commaNumberValidator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["export class TypeMessage {\r\n\r\n    type: string;\r\n\r\n}\r\n","\r\nexport enum DataType {\r\n    Nominal = 'Nominal',\r\n    Percentage = 'Percentage'\r\n}\r\n\r\nexport interface MyOption {\r\n    value: number;\r\n    text: string;\r\n    selected: boolean;\r\n}\r\n\r\nexport enum ProfitType {\r\n    SmartPhone = 11,\r\n    Computer = 22,\r\n    GameBox = 33\r\n}\r\n\r\n// const vs enum:  https://www.typescriptlang.org/docs/handbook/enums.html\r\nexport const OProfitType = {\r\n    SmartPhone: 11,\r\n    Computer: 22,\r\n    GameBox: 33\r\n};\r\n\r\nexport type MyProfit = typeof OProfitType[keyof typeof OProfitType];\r\n\r\n\r\n\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'profitName'\n})\nexport class ProfitNamePipe implements PipeTransform {\n\n  transform(value: number, ...args: unknown[]): string {\n\n    if (value === 1 ) {\n        return 'Smart Phone';\n    }\n    if (value === 2 ) {\n        return 'Computer';\n    }\n    if (value === 3 ) {\n        return 'Game Box';\n    }\n\n    return '';\n\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safeUrl'\r\n})\r\n\r\nexport class SafeUrlPipe implements PipeTransform {\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n    transform(url) {\r\n        const r =  this.domSanitizer.bypassSecurityTrustUrl(url);\r\n        return r;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-shared',\n  template: `\n    <p>\n      shared works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class SharedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ProfitNamePipe } from './profit-name.pipe';\nimport { SafeUrlPipe } from './safe-url.pipe';\nimport { SharedComponent } from './shared.component';\n\n\n\n@NgModule({\n    declarations: [\n        SharedComponent,\n        ProfitNamePipe,\n        SafeUrlPipe],\n    imports: [\n    ],\n    exports: [\n        SharedComponent,\n        ProfitNamePipe,\n        SafeUrlPipe]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor() { }\n\n  getServerName(): string {\n    return 'from shared mudule SharedService';\n}\n}\n","/*\n * Public API Surface of shared\n */\n\nexport * from './lib/shared.service';\nexport * from './lib/shared.component';\nexport * from './lib/shared.module';\nexport * from './lib/enums';\nexport * from './lib/profit-name.pipe';\nexport * from './lib/safe-url.pipe';\nexport * from './lib/TypeMessage';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '',\n  styleUrls: []\n})\nexport class AppComponent {\n  title = 'comp2';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProfitDropdownComponent } from './profit-dropdown/profit-dropdown.component';\nimport { createCustomElement } from '@angular/elements';\nimport { JustaFireComponent } from './fire/justa-fire.component';\nimport { MultiUserPickerComponent } from './multi-user-picker/multi-user-picker.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfitDropdownComponent,\n    JustaFireComponent,\n    MultiUserPickerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    // MultiUserPickerComponent need HttpClient in the constructor,\n    // but we need to import HttpClientModule rather than HttpClient\n    // which is weird\n\n    FormsModule,       // this is needed for angular forms\n    ReactiveFormsModule  // this is needed for angular forms\n\n  ],\n  providers: [],\n  // bootstrap: [AppComponent]\n  // must comment out this bootstrap for web component created from createCustomElement\n  // when you directly test it on index.html page\n})\nexport class AppModule implements DoBootstrap {\n    constructor(private injector: Injector) {\n      const elements = {\n        'profit-dropdown': ProfitDropdownComponent,\n        'justa-fire': JustaFireComponent,\n        'justa-user-picker': MultiUserPickerComponent,\n      };\n      Object.keys(elements).forEach((k) => {\n        const component = elements[k];\n        const e = createCustomElement(component, {\n          injector: this.injector,\n        });\n        customElements.define(k, e);\n      });\n    }\n    ngDoBootstrap() {}\n  }\n\n\n","export class LocalSetting {\r\n\r\n    private static logging: boolean;\r\n\r\n    public static getLoggin(): boolean {\r\n        if (LocalSetting.logging !== undefined) {\r\n            return LocalSetting.logging;\r\n        }\r\n        const logging = localStorage.getItem('justa.logging');\r\n        // localStorge based on origin, ie  web site, so the setting on one site can't be seen for another site\r\n        // every site has at least 5mb size\r\n        if (logging) {\r\n            LocalSetting.logging = logging.toLowerCase() === 'true';\r\n        } else {\r\n            LocalSetting.logging = false;\r\n        }\r\n        return LocalSetting.logging;\r\n    }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\n\r\n// please also see https://medium.com/@srik913/angular-validation-error-messages-display-using-directives-415a7616caf3\r\n// for directive way to handle error message\r\nexport class FormControlWithError extends FormControl {\r\n    getError(): string {\r\n        if (this.invalid) {\r\n            const keys = Object.keys(this.errors);\r\n            for (const errKey of keys) {\r\n                // only return first error\r\n                // it is return error key now, better to return more meanful message\r\n                return errKey;\r\n            }\r\n            return 'unknow error';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    getErrorClass(): string {\r\n        if (this.invalid) {\r\n            return 'validation-error';\r\n        }\r\n        return '';\r\n    }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, HostListener, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, ValidatorFn, FormBuilder } from '@angular/forms';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CommaNumberValidator } from '../validator/commaNumberValidator';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { FormControlWithError } from './FormControlWithError';\nimport { MyAwesomeRangeValidator } from './validators';\nimport { LocalSetting } from '../common/LocalSetting';\n\n@Component({\n    selector: 'app-justa-fire',\n    templateUrl: './justa-fire.component.html',\n    styleUrls: ['./justa-fire.component.scss'],\n    encapsulation: ViewEncapsulation.ShadowDom\n})\nexport class JustaFireComponent implements OnInit, AfterViewInit {\n\n    @Input() field: string;\n    logging = false;\n    color = 'red';\n    targetElement: HTMLInputElement;\n    errorMsg: string;\n\n    myName = new FormControl('Justin');\n\n    mySalary2 = new FormControlWithError('3,234,000.00');\n    // put  on component directly help:\n    //      IDE to do code completion suggesion even on html template\n    //      Angular to do compiling checking\n    //      Jasmine to do unit testing\n    // if it is in myform, then those benefits are gone\n\n    myJavaExperience = new FormControlWithError('30.5');\n    rangeStart = new FormControlWithError('11');\n    rangeEnd = new FormControlWithError('32');\n    myform: FormGroup;\n    // myform = new FormGroup({\n    //     myName: this.myName,\n    //     mySalary: this.mySalary,\n    //     myJavaExperience: this.myJavaExperience,\n    //     rangeStart: this.rangeStart,\n    //     rangeEnd: this.rangeEnd\n    // });\n\n    constructor(private fb: FormBuilder) {\n\n        this.logging = LocalSetting.getLoggin();\n\n        this.myName.setValidators(Validators.required);\n        this.mySalary2.setValidators([\n            Validators.required,\n            CommaNumberValidator()\n        ]);\n        this.myJavaExperience.setValidators([\n            Validators.required,\n            CommaNumberValidator()\n        ]);\n        this.rangeStart.setValidators([\n            Validators.required,\n            MyAwesomeRangeValidator\n        ]);\n        this.rangeEnd.setValidators([\n            Validators.required,\n            MyAwesomeRangeValidator\n        ]);\n        this.myform = this.fb.group({\n            myName: this.myName,\n            mySalary: this.mySalary2,\n            myJavaExperience: this.myJavaExperience,\n            rangeStart: this.rangeStart,\n            rangeEnd: this.rangeEnd\n        });\n\n        this.checkField();\n        this.hookObserver();\n\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterViewInit() {\n        this.mySalary2.patchValue('2345.5');\n    }\n\n    private checkField(): boolean {\n        if (!this.field) {\n            this.errorMsg = 'Need to set field.';\n            return false;\n        }\n        return true;\n    }\n\n    changeSalary(): void {\n        this.mySalary2.patchValue('2345.5');\n        // patch value always trigger the value change event even it is the same value as before\n    }\n\n    @HostListener('window:onJustaColorChange')\n    onDataLoading() {\n        if (this.logging) {\n            console.log('onJustaColorChange: reset color...');\n        }\n\n        if (!this.checkTargetField()) {\n            return;\n        }\n\n        this.color = this.targetElement.value;\n\n        this.errorMsg = '';\n    }\n\n    private checkTargetField(): boolean {\n        if (!this.checkField()) {\n            return false;\n        }\n\n        this.targetElement = document.getElementById(this.field) as HTMLInputElement;\n        if (!this.targetElement) {\n            this.errorMsg = 'Didn\\'t find target element: ' + this.field;\n            return false;\n        }\n        return true;\n    }\n\n    private hookObserver(): void {\n\n        this.myform.valueChanges.pipe(\n            distinctUntilChanged()\n        )\n            .subscribe(term => {\n\n                if (this.myform.valid) {\n                    if (this.logging) {\n                        console.log('valid data');\n                    }\n                } else {\n                    if (this.logging) {\n                        console.log('invalid data');\n                    }\n                }\n            });\n    }\n\n}\n","<div class=\"fire\">\n    <label [style.display]=\"errorMsg?'inline':'none'\" style=\"color:red\">{{errorMsg}}</label>\n    <label>\n        My fire \n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" style.stroke=\"{{color}}\" style=\"fill: none;\">\n            <path d=\"M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z\"></path>\n        </svg> works!\n    </label>\n    <div class=\"myform\">\n\n        <form novalidate [formGroup]=\"myform\">\n            Valid:{{myform.valid}}\n            <div>\n                <div>Name: </div>\n                <input type=\"text\"  [ngClass]=\"{'validation-error': myName.invalid}\"\n                [title] = \"myName.invalid ? 'required' : ''\"   [formControl]=\"myName\"  />\n            </div>\n            <div *ngIf=\"myJavaExperience as cc\" >\n                \n                <div>Java Experience:</div>\n                <input type=\"text\" [formControl]=\"cc\"\n                [ngClass]=\"cc.getErrorClass()\"\n                [title]=\"cc.getError()\"\n                  />\n            </div>\n            <div >\n                <div>Salary:</div>\n                <input type=\"text\" [formControl]=\"mySalary2\"\n                [ngClass]=\"mySalary2.getErrorClass()\"\n                [title]=\"mySalary2.getError()\"\n                  />\n            </div>\n\n            <div *ngIf=\"rangeStart as cc\" >                \n                <div>Range start:</div>\n                <input type=\"text\" [formControl]=\"cc\"\n                [ngClass]=\"cc.getErrorClass()\"\n                [title]=\"cc.getError()\"\n                  />\n            </div>\n            <div *ngIf=\"rangeEnd as cc\" >                \n                <div>Range end:</div>\n                <input type=\"text\" [formControl]=\"cc\"\n                [ngClass]=\"cc.getErrorClass()\"\n                [title]=\"cc.getError()\"\n                  />\n            </div>\n            <div>\n                <button (click) = \"changeSalary()\" >change salary</button>\n            </div>\n            \n        </form>\n    </div>\n</div>","import { ValidatorFn, FormControl } from '@angular/forms';\r\n\r\n// corsss multipel fields validation sample\r\n// comes from https://medium.com/@realTomaszKula/angular-cross-field-validation-d94e0d063b61\r\n\r\n// please also see https://dzone.com/articles/how-to-do-conditional-validation-on-valuechanges-m\r\n// for another way\r\nexport const MyAwesomeRangeValidator: ValidatorFn = (fc: FormControl) => {\r\n\r\n    const start = fc.parent.get('rangeStart').value;\r\n    const end = fc.parent.get('rangeEnd').value;\r\n    if (start === '' || end === '') {\r\n        return null;\r\n    }\r\n    const x = Number(start);\r\n    const y = Number(end);\r\n\r\n    if (x < y) {\r\n        return null;\r\n    } else {\r\n        return { rangeIsIncorrect: true };\r\n    }\r\n\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LocalSetting } from '../common/LocalSetting';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-multi-user-picker',\r\n    templateUrl: './multi-user-picker.component.html',\r\n    styleUrls: ['./multi-user-picker.component.scss']\r\n})\r\nexport class MultiUserPickerComponent implements OnInit {\r\n\r\n    logging = false;\r\n    apiUrl: string;\r\n    errorMsg: string;\r\n    loading = false;\r\n    selected = '';\r\n    list: { id: number, name: string }[] = [];\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.logging = LocalSetting.getLoggin();\r\n        if (environment.localApi) {\r\n            this.apiUrl = 'assets/user.list.json';\r\n            // this.apiUrl = 'assets/user.api.wrong.field.json';\r\n            // this.apiUrl = 'assets/user.api.not.array.json';\r\n        } else {\r\n            this.apiUrl = '/jersey2/api/users/range.json?from=1&to=100000';\r\n        }\r\n        if (this.logging) {\r\n            console.log(this.apiUrl);\r\n        }\r\n\r\n        this.loading = true;\r\n        this.http.get(this.apiUrl).subscribe((res: any[]) => {\r\n            this.loading = false;\r\n            this.handleApiResonse(res);\r\n        }, (err) => {\r\n            this.loading = false;\r\n            this.errorMsg = `API Error: ${err.status} ${err.statusText}`;\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    private handleApiResonse(res: any[]): void {\r\n\r\n        if (this.logging) {\r\n            console.log('handle API response...');\r\n        }\r\n\r\n        const tempList: { id: number, name: string }[] = [];\r\n\r\n        // convert to target option list\r\n        this.errorMsg = '';\r\n        if (!Array.isArray(res)) {\r\n            this.errorMsg = 'Didn\\'t find array from API response';\r\n            return;\r\n        }\r\n\r\n        res.forEach(item => {\r\n            if (!item.id) {\r\n                this.errorMsg = 'Didn\\'t find id from API response';\r\n                return;\r\n            }\r\n            if (!item.name) {\r\n                this.errorMsg = 'Didn\\'t find name from API response';\r\n                return;\r\n            }\r\n\r\n            const one = {\r\n                id: item.id,\r\n                name: item.name\r\n            };\r\n            tempList.push(one);\r\n        });\r\n\r\n        if (this.errorMsg) {\r\n            return;\r\n        }\r\n\r\n        this.list = tempList;\r\n        // set selected\r\n    }\r\n\r\n    handleChange(x): void {\r\n        const ele = x.srcElement as HTMLSelectElement;\r\n\r\n        let selected = '';\r\n        for (let i = 0; i < ele.options.length; i++) {\r\n            const o = ele.options[i];\r\n            if (o.selected) {\r\n                if (selected){\r\n                    selected = selected + '; ' + o.text;\r\n                }else{\r\n                    selected = o.text;\r\n                }\r\n            }\r\n        }\r\n        this.selected = selected;\r\n\r\n        // const selectedUserList = ele.options.map(function (o) {\r\n        //     return o.text;\r\n        // }).filter(function (o) {\r\n\r\n        //     return o.selected;\r\n        // });\r\n        //console.log(selectedUserList);\r\n    }\r\n\r\n}\r\n","<div class=\"user-picker\">\n  <span class=\"color_F\">{{errorMsg}}</span>\n  <span class=\"spinSmIcon\" [style.display]=\"loading ? 'inline-block' : 'none'\"></span>\n  <br />\n  <select multiple (change)=\"handleChange($event)\" style=\"width:210px; height: 140px;\">\n    <option *ngFor=\"let x of list\" [value]=\"x.id\">{{x.name}}</option>\n  </select>\n\n  Selcted: {{selected}}\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MyProfit, MyOption, OProfitType, ProfitType } from 'projects/shared/src/public-api';\nimport { environment } from '../../environments/environment';\n\n@Component({\n    selector: 'app-profit-dropdown',\n    templateUrl: './profit-dropdown.component.html',\n    styleUrls: ['./profit-dropdown.component.scss']\n})\nexport class ProfitDropdownComponent implements OnInit {\n\n    list: MyOption[] = [];\n\n    constructor() {\n        this.handleProfit(ProfitType.Computer);\n        this.handleDirection(OProfitType.Computer);\n     }\n\n    ngOnInit(): void {\n        console.log(environment.production);\n\n    }\n\n    private handleProfit(p: ProfitType): void {\n        let x = ProfitType[1];\n        console.log(x);   // return 'SmartPhone'\n        x = ProfitType[9];\n        console.log(x);  // undefined\n        for (const pt in ProfitType) {\n            if (isNaN(Number(pt))) {\n                console.log(pt);\n            }\n        }\n\n    }\n\n    private handleDirection(d: MyProfit): void {\n        console.log(d);\n        console.log(OProfitType[d]); // didn't work, why?\n\n        for (const od in OProfitType) {\n            if (od) {\n                const one: MyOption = {\n                    value: OProfitType[od],\n                    text: od,\n                    selected: false\n                };\n                this.list.push(one);\n            }\n\n        }\n\n    }\n\n\n}\n","<div class=\"profit-div\">\n<label>This is a web component: </label>\n<select>\n    <option *ngFor=\"let x of list\" [value]=\"x.value\" [selected]=\"x.selected\">{{x.text}}</option>\n</select>\n</div>","export class ValidTypeList {\r\n\r\n    public static readonly FloatComma = /^-?(?=.)(\\d{1,3}(,\\d{3})*)?(\\.\\d+)?$/;  // for number 12,345,678.0045\r\n    // commas are required\r\n    // Can start with \".\"\r\n    // Can be negative\r\n    // Pass: 1,234,567.8912, 1234567.8912\r\n    // Fail: 10000,000, 1,00,00.34, -234,567.00\r\n\r\n    public static readonly PositiveFloatOptionalComma = /^(\\d+|\\d{1,3}(,\\d{3})*)(\\.\\d+)?$/;\r\n    // commas are optional as long as they're consistent\r\n    // Can't start with \".\"\r\n    // Can't be negative\r\n    // Pass: 1,234,567.8912, 1234567.8912\r\n    // Fail: 10000,000, 1,00,00.34, -234,567.00\r\n\r\n}\r\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { ValidTypeList } from './ValidTypeList';\r\n\r\nconst CommaNumber =  ValidTypeList.PositiveFloatOptionalComma;\r\nexport function CommaNumberValidator(): ValidatorFn {\r\n  return (control: AbstractControl): {[key: string]: any} | null => {\r\n    const isValid = CommaNumber.test(control.value);\r\n    return isValid ? null : {IncorrectFormatNumber: {value: control.value}}  ;\r\n  };\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  localApi: true,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}