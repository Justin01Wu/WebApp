{"version":3,"sources":["webpack:///shared/src/lib/TypeMessage.ts","webpack:///shared/src/lib/enums.ts","webpack:///shared/src/lib/profit-name.pipe.ts","webpack:///shared/src/lib/safe-url.pipe.ts","webpack:///shared/src/lib/shared.component.ts","webpack:///shared/src/lib/shared.module.ts","webpack:///shared/src/lib/shared.service.ts","webpack:///shared/src/public-api.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/common/LocalSetting.ts","webpack:///src/app/fire/FormControlWithError.ts","webpack:///src/app/fire/justa-fire.component.ts","webpack:///src/app/fire/justa-fire.component.html","webpack:///src/app/fire/validators.ts","webpack:///src/app/multi-user-picker/multi-user-picker.component.ts","webpack:///src/app/multi-user-picker/multi-user-picker.component.html","webpack:///src/app/profit-dropdown/profit-dropdown.component.ts","webpack:///src/app/profit-dropdown/profit-dropdown.component.html","webpack:///src/app/validator/ValidTypeList.ts","webpack:///src/app/validator/commaNumberValidator.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["TypeMessage","DataType","ProfitType","OProfitType","SmartPhone","Computer","GameBox","ProfitNamePipe","value","name","SafeUrlPipe","domSanitizer","url","r","bypassSecurityTrustUrl","SharedComponent","selector","template","styles","SharedModule","declarations","imports","exports","SharedService","providedIn","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id","AppComponent","title","styleUrls","AppModule","injector","elements","Object","forEach","k","component","customElements","define","providers","LocalSetting","logging","undefined","localStorage","getItem","toLowerCase","FormControlWithError","invalid","errors","errKey","JustaFireComponent","fb","color","myName","mySalary2","myJavaExperience","rangeStart","rangeEnd","getLoggin","setValidators","required","myform","group","mySalary","checkField","hookObserver","patchValue","field","errorMsg","console","log","checkTargetField","targetElement","document","getElementById","valueChanges","pipe","subscribe","term","valid","changeSalary","templateUrl","encapsulation","ShadowDom","MyAwesomeRangeValidator","fc","start","parent","get","end","x","Number","y","rangeIsIncorrect","MultiUserPickerComponent","http","loading","selected","list","localApi","apiUrl","res","handleApiResonse","err","status","statusText","tempList","Array","isArray","item","one","push","ele","srcElement","i","options","length","o","text","handleChange","ProfitDropdownComponent","handleProfit","handleDirection","production","p","pt","isNaN","d","od","ValidTypeList","FloatComma","PositiveFloatOptionalComma","CommaNumber","CommaNumberValidator","control","isValid","test","IncorrectFormatNumber","environment","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["export class TypeMessage {\r\n\r\n    type: string;\r\n\r\n}\r\n","\r\nexport enum DataType {\r\n    Nominal = 'Nominal',\r\n    Percentage = 'Percentage'\r\n}\r\n\r\nexport interface MyOption {\r\n    value: number;\r\n    text: string;\r\n    selected: boolean;\r\n}\r\n\r\nexport enum ProfitType {\r\n    SmartPhone = 11,\r\n    Computer = 22,\r\n    GameBox = 33\r\n}\r\n\r\n// const vs enum:  https://www.typescriptlang.org/docs/handbook/enums.html\r\nexport const OProfitType = {\r\n    SmartPhone: 11,\r\n    Computer: 22,\r\n    GameBox: 33\r\n};\r\n\r\nexport type MyProfit = typeof OProfitType[keyof typeof OProfitType];\r\n\r\n\r\n\r\n\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'profitName'\n})\nexport class ProfitNamePipe implements PipeTransform {\n\n  transform(value: number, ...args: unknown[]): string {\n\n    if (value === 1 ) {\n        return 'Smart Phone';\n    }\n    if (value === 2 ) {\n        return 'Computer';\n    }\n    if (value === 3 ) {\n        return 'Game Box';\n    }\n\n    return '';\n\n\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safeUrl'\r\n})\r\n\r\nexport class SafeUrlPipe implements PipeTransform {\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n    transform(url) {\r\n        const r =  this.domSanitizer.bypassSecurityTrustUrl(url);\r\n        return r;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-shared',\n  template: `\n    <p>\n      shared works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class SharedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ProfitNamePipe } from './profit-name.pipe';\nimport { SafeUrlPipe } from './safe-url.pipe';\nimport { SharedComponent } from './shared.component';\n\n\n\n@NgModule({\n    declarations: [\n        SharedComponent,\n        ProfitNamePipe,\n        SafeUrlPipe],\n    imports: [\n    ],\n    exports: [\n        SharedComponent,\n        ProfitNamePipe,\n        SafeUrlPipe]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  constructor() { }\n\n  getServerName(): string {\n    return 'from shared mudule SharedService';\n}\n}\n","/*\n * Public API Surface of shared\n */\n\nexport * from './lib/shared.service';\nexport * from './lib/shared.component';\nexport * from './lib/shared.module';\nexport * from './lib/enums';\nexport * from './lib/profit-name.pipe';\nexport * from './lib/safe-url.pipe';\nexport * from './lib/TypeMessage';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '',\n  styleUrls: []\n})\nexport class AppComponent {\n  title = 'comp2';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProfitDropdownComponent } from './profit-dropdown/profit-dropdown.component';\nimport { createCustomElement } from '@angular/elements';\nimport { JustaFireComponent } from './fire/justa-fire.component';\nimport { MultiUserPickerComponent } from './multi-user-picker/multi-user-picker.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfitDropdownComponent,\n    JustaFireComponent,\n    MultiUserPickerComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    // MultiUserPickerComponent need HttpClient in the constructor,\n    // but we need to import HttpClientModule rather than HttpClient\n    // which is weird\n\n    FormsModule,       // this is needed for angular forms\n    ReactiveFormsModule  // this is needed for angular forms\n\n  ],\n  providers: [],\n  // bootstrap: [AppComponent]\n  // must comment out this bootstrap for web component created from createCustomElement\n  // when you directly test it on index.html page\n})\nexport class AppModule implements DoBootstrap {\n    constructor(private injector: Injector) {\n      const elements = {\n        'profit-dropdown': ProfitDropdownComponent,\n        'justa-fire': JustaFireComponent,\n        'justa-user-picker': MultiUserPickerComponent,\n      };\n      Object.keys(elements).forEach((k) => {\n        const component = elements[k];\n        const e = createCustomElement(component, {\n          injector: this.injector,\n        });\n        customElements.define(k, e);\n      });\n    }\n    ngDoBootstrap() {}\n  }\n\n\n","export class LocalSetting {\r\n\r\n    private static logging: boolean;\r\n\r\n    public static getLoggin(): boolean {\r\n        if (LocalSetting.logging !== undefined) {\r\n            return LocalSetting.logging;\r\n        }\r\n        const logging = localStorage.getItem('justa.logging');\r\n        // localStorge based on origin, ie  web site, so the setting on one site can't be seen for another site\r\n        // every site has at least 5mb size\r\n        if (logging) {\r\n            LocalSetting.logging = logging.toLowerCase() === 'true';\r\n        } else {\r\n            LocalSetting.logging = false;\r\n        }\r\n        return LocalSetting.logging;\r\n    }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\n\r\n// please also see https://medium.com/@srik913/angular-validation-error-messages-display-using-directives-415a7616caf3\r\n// for directive way to handle error message\r\nexport class FormControlWithError extends FormControl {\r\n    getError(): string {\r\n        if (this.invalid) {\r\n            const keys = Object.keys(this.errors);\r\n            for (const errKey of keys) {\r\n                // only return first error\r\n                // it is return error key now, better to return more meanful message\r\n                return errKey;\r\n            }\r\n            return 'unknow error';\r\n        }\r\n        return '';\r\n    }\r\n\r\n    getErrorClass(): string {\r\n        if (this.invalid) {\r\n            return 'validation-error';\r\n        }\r\n        return '';\r\n    }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation, Input, HostListener, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, ValidatorFn, FormBuilder } from '@angular/forms';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { CommaNumberValidator } from '../validator/commaNumberValidator';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { FormControlWithError } from './FormControlWithError';\nimport { MyAwesomeRangeValidator } from './validators';\nimport { LocalSetting } from '../common/LocalSetting';\n\n@Component({\n    selector: 'app-justa-fire',\n    templateUrl: './justa-fire.component.html',\n    styleUrls: ['./justa-fire.component.scss'],\n    encapsulation: ViewEncapsulation.ShadowDom\n})\nexport class JustaFireComponent implements OnInit, AfterViewInit {\n\n    @Input() field: string;\n    logging = false;\n    color = 'red';\n    targetElement: HTMLInputElement;\n    errorMsg: string;\n\n    myName = new FormControl('Justin');\n\n    mySalary2 = new FormControlWithError('3,234,000.00');\n    // put  on component directly help:\n    //      IDE to do code completion suggesion even on html template\n    //      Angular to do compiling checking\n    //      Jasmine to do unit testing\n    // if it is in myform, then those benefits are gone\n\n    myJavaExperience = new FormControlWithError('30.5');\n    rangeStart = new FormControlWithError('11');\n    rangeEnd = new FormControlWithError('32');\n    myform: FormGroup;\n    // myform = new FormGroup({\n    //     myName: this.myName,\n    //     mySalary: this.mySalary,\n    //     myJavaExperience: this.myJavaExperience,\n    //     rangeStart: this.rangeStart,\n    //     rangeEnd: this.rangeEnd\n    // });\n\n    constructor(private fb: FormBuilder) {\n\n        this.logging = LocalSetting.getLoggin();\n\n        this.myName.setValidators(Validators.required);\n        this.mySalary2.setValidators([\n            Validators.required,\n            CommaNumberValidator()\n        ]);\n        this.myJavaExperience.setValidators([\n            Validators.required,\n            CommaNumberValidator()\n        ]);\n        this.rangeStart.setValidators([\n            Validators.required,\n            MyAwesomeRangeValidator\n        ]);\n        this.rangeEnd.setValidators([\n            Validators.required,\n            MyAwesomeRangeValidator\n        ]);\n        this.myform = this.fb.group({\n            myName: this.myName,\n            mySalary: this.mySalary2,\n            myJavaExperience: this.myJavaExperience,\n            rangeStart: this.rangeStart,\n            rangeEnd: this.rangeEnd\n        });\n\n        this.checkField();\n        this.hookObserver();\n\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    ngAfterViewInit() {\n        this.mySalary2.patchValue('2345.5');\n    }\n\n    private checkField(): boolean {\n        if (!this.field) {\n            this.errorMsg = 'Need to set field.';\n            return false;\n        }\n        return true;\n    }\n\n    changeSalary(): void {\n        this.mySalary2.patchValue('2345.5');\n        // patch value always trigger the value change event even it is the same value as before\n    }\n\n    @HostListener('window:onJustaColorChange')\n    onDataLoading() {\n        if (this.logging) {\n            console.log('onJustaColorChange: reset color...');\n        }\n\n        if (!this.checkTargetField()) {\n            return;\n        }\n\n        this.color = this.targetElement.value;\n\n        this.errorMsg = '';\n    }\n\n    private checkTargetField(): boolean {\n        if (!this.checkField()) {\n            return false;\n        }\n\n        this.targetElement = document.getElementById(this.field) as HTMLInputElement;\n        if (!this.targetElement) {\n            this.errorMsg = 'Didn\\'t find target element: ' + this.field;\n            return false;\n        }\n        return true;\n    }\n\n    private hookObserver(): void {\n\n        this.myform.valueChanges.pipe(\n            distinctUntilChanged()\n        )\n            .subscribe(term => {\n\n                if (this.myform.valid) {\n                    if (this.logging) {\n                        console.log('valid data');\n                    }\n                } else {\n                    if (this.logging) {\n                        console.log('invalid data');\n                    }\n                }\n            });\n    }\n\n}\n","<div class=\"fire\">\n    <label [style.display]=\"errorMsg?'inline':'none'\" style=\"color:red\">{{errorMsg}}</label>\n    <label>\n        My fire \n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" style.stroke=\"{{color}}\" style=\"fill: none;\">\n            <path d=\"M13.5.67s.74 2.65.74 4.8c0 2.06-1.35 3.73-3.41 3.73-2.07 0-3.63-1.67-3.63-3.73l.03-.36C5.21 7.51 4 10.62 4 14c0 4.42 3.58 8 8 8s8-3.58 8-8C20 8.61 17.41 3.8 13.5.67zM11.71 19c-1.78 0-3.22-1.4-3.22-3.14 0-1.62 1.05-2.76 2.81-3.12 1.77-.36 3.6-1.21 4.62-2.58.39 1.29.59 2.65.59 4.04 0 2.65-2.15 4.8-4.8 4.8z\"></path>\n        </svg> works!\n    </label>\n    <div class=\"myform\">\n\n        <form novalidate [formGroup]=\"myform\">\n            Valid:{{myform.valid}}\n            <div>\n                <div>Name: </div>\n                <input type=\"text\"  [ngClass]=\"{'validation-error': myName.invalid}\"\n                [title] = \"myName.invalid ? 'required' : ''\"   [formControl]=\"myName\"  />\n            </div>\n            <div *ngIf=\"myJavaExperience as cc\" >\n                \n                <div>Java Experience:</div>\n                <input type=\"text\" [formControl]=\"cc\"\n                [ngClass]=\"cc.getErrorClass()\"\n                [title]=\"cc.getError()\"\n                  />\n            </div>\n            <div >\n                <div>Salary:</div>\n                <input type=\"text\" [formControl]=\"mySalary2\"\n                [ngClass]=\"mySalary2.getErrorClass()\"\n                [title]=\"mySalary2.getError()\"\n                  />\n            </div>\n\n            <div *ngIf=\"rangeStart as cc\" >                \n                <div>Range start:</div>\n                <input type=\"text\" [formControl]=\"cc\"\n                [ngClass]=\"cc.getErrorClass()\"\n                [title]=\"cc.getError()\"\n                  />\n            </div>\n            <div *ngIf=\"rangeEnd as cc\" >                \n                <div>Range end:</div>\n                <input type=\"text\" [formControl]=\"cc\"\n                [ngClass]=\"cc.getErrorClass()\"\n                [title]=\"cc.getError()\"\n                  />\n            </div>\n            <div>\n                <button (click) = \"changeSalary()\" >change salary</button>\n            </div>\n            \n        </form>\n    </div>\n</div>","import { ValidatorFn, FormControl } from '@angular/forms';\r\n\r\n// corsss multipel fields validation sample\r\n// comes from https://medium.com/@realTomaszKula/angular-cross-field-validation-d94e0d063b61\r\n\r\n// please also see https://dzone.com/articles/how-to-do-conditional-validation-on-valuechanges-m\r\n// for another way\r\nexport const MyAwesomeRangeValidator: ValidatorFn = (fc: FormControl) => {\r\n\r\n    const start = fc.parent.get('rangeStart').value;\r\n    const end = fc.parent.get('rangeEnd').value;\r\n    if (start === '' || end === '') {\r\n        return null;\r\n    }\r\n    const x = Number(start);\r\n    const y = Number(end);\r\n\r\n    if (x < y) {\r\n        return null;\r\n    } else {\r\n        return { rangeIsIncorrect: true };\r\n    }\r\n\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LocalSetting } from '../common/LocalSetting';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-multi-user-picker',\r\n    templateUrl: './multi-user-picker.component.html',\r\n    styleUrls: ['./multi-user-picker.component.scss']\r\n})\r\nexport class MultiUserPickerComponent implements OnInit {\r\n\r\n    logging = false;\r\n    apiUrl: string;\r\n    errorMsg: string;\r\n    loading = false;\r\n    selected = '';\r\n    list: { id: number, name: string }[] = [];\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.logging = LocalSetting.getLoggin();\r\n        if (environment.localApi) {\r\n            this.apiUrl = 'assets/user.list.json';\r\n            // this.apiUrl = 'assets/user.api.wrong.field.json';\r\n            // this.apiUrl = 'assets/user.api.not.array.json';\r\n        } else {\r\n            this.apiUrl = '/jersey2/api/users/range.json?from=1&to=100000';\r\n        }\r\n        if (this.logging) {\r\n            console.log(this.apiUrl);\r\n        }\r\n\r\n        this.loading = true;\r\n        this.http.get(this.apiUrl).subscribe((res: any[]) => {\r\n            this.loading = false;\r\n            this.handleApiResonse(res);\r\n        }, (err) => {\r\n            this.loading = false;\r\n            this.errorMsg = `API Error: ${err.status} ${err.statusText}`;\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    private handleApiResonse(res: any[]): void {\r\n\r\n        if (this.logging) {\r\n            console.log('handle API response...');\r\n        }\r\n\r\n        const tempList: { id: number, name: string }[] = [];\r\n\r\n        // convert to target option list\r\n        this.errorMsg = '';\r\n        if (!Array.isArray(res)) {\r\n            this.errorMsg = 'Didn\\'t find array from API response';\r\n            return;\r\n        }\r\n\r\n        res.forEach(item => {\r\n            if (!item.id) {\r\n                this.errorMsg = 'Didn\\'t find id from API response';\r\n                return;\r\n            }\r\n            if (!item.name) {\r\n                this.errorMsg = 'Didn\\'t find name from API response';\r\n                return;\r\n            }\r\n\r\n            const one = {\r\n                id: item.id,\r\n                name: item.name\r\n            };\r\n            tempList.push(one);\r\n        });\r\n\r\n        if (this.errorMsg) {\r\n            return;\r\n        }\r\n\r\n        this.list = tempList;\r\n        // set selected\r\n    }\r\n\r\n    handleChange(x): void {\r\n        const ele = x.srcElement as HTMLSelectElement;\r\n\r\n        let selected = '';\r\n        for (let i = 0; i < ele.options.length; i++) {\r\n            const o = ele.options[i];\r\n            if (o.selected) {\r\n                if (selected){\r\n                    selected = selected + '; ' + o.text;\r\n                }else{\r\n                    selected = o.text;\r\n                }\r\n            }\r\n        }\r\n        this.selected = selected;\r\n\r\n        // const selectedUserList = ele.options.map(function (o) {\r\n        //     return o.text;\r\n        // }).filter(function (o) {\r\n\r\n        //     return o.selected;\r\n        // });\r\n        //console.log(selectedUserList);\r\n    }\r\n\r\n}\r\n","<div class=\"user-picker\">\n  <span class=\"color_F\">{{errorMsg}}</span>\n  <span class=\"spinSmIcon\" [style.display]=\"loading ? 'inline-block' : 'none'\"></span>\n  <br />\n  <select multiple (change)=\"handleChange($event)\" style=\"width:210px; height: 140px;\">\n    <option *ngFor=\"let x of list\" [value]=\"x.id\">{{x.name}}</option>\n  </select>\n\n  Selcted: {{selected}}\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MyProfit, MyOption, OProfitType, ProfitType } from 'projects/shared/src/public-api';\nimport { environment } from '../../environments/environment';\n\n@Component({\n    selector: 'app-profit-dropdown',\n    templateUrl: './profit-dropdown.component.html',\n    styleUrls: ['./profit-dropdown.component.scss']\n})\nexport class ProfitDropdownComponent implements OnInit {\n\n    list: MyOption[] = [];\n\n    constructor() {\n        this.handleProfit(ProfitType.Computer);\n        this.handleDirection(OProfitType.Computer);\n     }\n\n    ngOnInit(): void {\n        console.log(environment.production);\n\n    }\n\n    private handleProfit(p: ProfitType): void {\n        let x = ProfitType[1];\n        console.log(x);   // return 'SmartPhone'\n        x = ProfitType[9];\n        console.log(x);  // undefined\n        for (const pt in ProfitType) {\n            if (isNaN(Number(pt))) {\n                console.log(pt);\n            }\n        }\n\n    }\n\n    private handleDirection(d: MyProfit): void {\n        console.log(d);\n        console.log(OProfitType[d]); // didn't work, why?\n\n        for (const od in OProfitType) {\n            if (od) {\n                const one: MyOption = {\n                    value: OProfitType[od],\n                    text: od,\n                    selected: false\n                };\n                this.list.push(one);\n            }\n\n        }\n\n    }\n\n\n}\n","<div class=\"profit-div\">\n<label>This is a web component: </label>\n<select>\n    <option *ngFor=\"let x of list\" [value]=\"x.value\" [selected]=\"x.selected\">{{x.text}}</option>\n</select>\n</div>","export class ValidTypeList {\r\n\r\n    public static readonly FloatComma = /^-?(?=.)(\\d{1,3}(,\\d{3})*)?(\\.\\d+)?$/;  // for number 12,345,678.0045\r\n    // commas are required\r\n    // Can start with \".\"\r\n    // Can be negative\r\n    // Pass: 1,234,567.8912, 1234567.8912\r\n    // Fail: 10000,000, 1,00,00.34, -234,567.00\r\n\r\n    public static readonly PositiveFloatOptionalComma = /^(\\d+|\\d{1,3}(,\\d{3})*)(\\.\\d+)?$/;\r\n    // commas are optional as long as they're consistent\r\n    // Can't start with \".\"\r\n    // Can't be negative\r\n    // Pass: 1,234,567.8912, 1234567.8912\r\n    // Fail: 10000,000, 1,00,00.34, -234,567.00\r\n\r\n}\r\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\r\nimport { ValidTypeList } from './ValidTypeList';\r\n\r\nconst CommaNumber =  ValidTypeList.PositiveFloatOptionalComma;\r\nexport function CommaNumberValidator(): ValidatorFn {\r\n  return (control: AbstractControl): {[key: string]: any} | null => {\r\n    const isValid = CommaNumber.test(control.value);\r\n    return isValid ? null : {IncorrectFormatNumber: {value: control.value}}  ;\r\n  };\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  localApi: true,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}